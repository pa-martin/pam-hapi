# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-nodejs

name: Node.js CI

on:
  push:
    branches: [ "main", "dev" ]
  pull_request:
    branches: [ "main", "dev" ]

jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [20.x, 22.x, 24.x]
        # See supported Node.js release schedule at https://nodejs.org/en/about/releases/

    steps:
    - uses: actions/checkout@v4
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'
    - run: npm ci
    - run: npm run build --if-present
    - run: npm run lint --if-present
    - run: npm test --if-present

    # 1. On exécute npm-check-updates et on force la suite même en cas d'erreur
    - name: Vérifier les mises à jour de dépendances
      id: check-updates
      run: npx npm-check-updates --errorLevel 2
      continue-on-error: true
    # 2. Si l’étape précédente a échoué (code 2 = paquets obsolètes), on lève un warning
    - name: Alerter si des dépendances sont obsolètes
      if: steps.check-updates.outcome == 'failure'
      run: |
        echo "::warning::Certaines dépendances ne sont pas à jour. Exécutez `npx npm-check-updates -u` puis `npm install` pour les mettre à jour."
